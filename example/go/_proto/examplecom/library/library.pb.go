// Code generated by protoc-gen-go.
// source: examplecom/library/library.proto
// DO NOT EDIT!

/*
Package examplecom_library is a generated protocol buffer package.

It is generated from these files:
	examplecom/library/library.proto

It has these top-level messages:
	Book
	BookQuery
*/
package examplecom_library

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Book struct {
	Title    string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Contents string `protobuf:"bytes,2,opt,name=contents" json:"contents,omitempty"`
}

func (m *Book) Reset()                    { *m = Book{} }
func (m *Book) String() string            { return proto.CompactTextString(m) }
func (*Book) ProtoMessage()               {}
func (*Book) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Book) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Book) GetContents() string {
	if m != nil {
		return m.Contents
	}
	return ""
}

type BookQuery struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
}

func (m *BookQuery) Reset()                    { *m = BookQuery{} }
func (m *BookQuery) String() string            { return proto.CompactTextString(m) }
func (*BookQuery) ProtoMessage()               {}
func (*BookQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BookQuery) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func init() {
	proto.RegisterType((*Book)(nil), "examplecom.library.Book")
	proto.RegisterType((*BookQuery)(nil), "examplecom.library.BookQuery")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for LibraryService service

type LibraryServiceClient interface {
	GetBook(ctx context.Context, in *BookQuery, opts ...grpc.CallOption) (*Book, error)
	ListBooks(ctx context.Context, in *BookQuery, opts ...grpc.CallOption) (LibraryService_ListBooksClient, error)
}

type libraryServiceClient struct {
	cc *grpc.ClientConn
}

func NewLibraryServiceClient(cc *grpc.ClientConn) LibraryServiceClient {
	return &libraryServiceClient{cc}
}

func (c *libraryServiceClient) GetBook(ctx context.Context, in *BookQuery, opts ...grpc.CallOption) (*Book, error) {
	out := new(Book)
	err := grpc.Invoke(ctx, "/examplecom.library.LibraryService/GetBook", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *libraryServiceClient) ListBooks(ctx context.Context, in *BookQuery, opts ...grpc.CallOption) (LibraryService_ListBooksClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_LibraryService_serviceDesc.Streams[0], c.cc, "/examplecom.library.LibraryService/ListBooks", opts...)
	if err != nil {
		return nil, err
	}
	x := &libraryServiceListBooksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type LibraryService_ListBooksClient interface {
	Recv() (*Book, error)
	grpc.ClientStream
}

type libraryServiceListBooksClient struct {
	grpc.ClientStream
}

func (x *libraryServiceListBooksClient) Recv() (*Book, error) {
	m := new(Book)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for LibraryService service

type LibraryServiceServer interface {
	GetBook(context.Context, *BookQuery) (*Book, error)
	ListBooks(*BookQuery, LibraryService_ListBooksServer) error
}

func RegisterLibraryServiceServer(s *grpc.Server, srv LibraryServiceServer) {
	s.RegisterService(&_LibraryService_serviceDesc, srv)
}

func _LibraryService_GetBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BookQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryServiceServer).GetBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examplecom.library.LibraryService/GetBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryServiceServer).GetBook(ctx, req.(*BookQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _LibraryService_ListBooks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BookQuery)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(LibraryServiceServer).ListBooks(m, &libraryServiceListBooksServer{stream})
}

type LibraryService_ListBooksServer interface {
	Send(*Book) error
	grpc.ServerStream
}

type libraryServiceListBooksServer struct {
	grpc.ServerStream
}

func (x *libraryServiceListBooksServer) Send(m *Book) error {
	return x.ServerStream.SendMsg(m)
}

var _LibraryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "examplecom.library.LibraryService",
	HandlerType: (*LibraryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBook",
			Handler:    _LibraryService_GetBook_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListBooks",
			Handler:       _LibraryService_ListBooks_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "examplecom/library/library.proto",
}

func init() { proto.RegisterFile("examplecom/library/library.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x48, 0xad, 0x48, 0xcc,
	0x2d, 0xc8, 0x49, 0x4d, 0xce, 0xcf, 0xd5, 0xcf, 0xc9, 0x4c, 0x2a, 0x4a, 0x2c, 0xaa, 0x84, 0xd1,
	0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x42, 0x08, 0x15, 0x7a, 0x50, 0x19, 0x25, 0x0b, 0x2e,
	0x16, 0xa7, 0xfc, 0xfc, 0x6c, 0x21, 0x11, 0x2e, 0xd6, 0x92, 0xcc, 0x92, 0x9c, 0x54, 0x09, 0x46,
	0x05, 0x46, 0x0d, 0xce, 0x20, 0x08, 0x47, 0x48, 0x8a, 0x8b, 0x23, 0x39, 0x3f, 0xaf, 0x24, 0x35,
	0xaf, 0xa4, 0x58, 0x82, 0x09, 0x2c, 0x01, 0xe7, 0x2b, 0x29, 0x72, 0x71, 0x82, 0x74, 0x06, 0x96,
	0xa6, 0x16, 0x55, 0x62, 0xd7, 0x6e, 0xb4, 0x80, 0x91, 0x8b, 0xcf, 0x07, 0x62, 0x51, 0x70, 0x6a,
	0x51, 0x59, 0x66, 0x72, 0xaa, 0x90, 0x0b, 0x17, 0xbb, 0x7b, 0x6a, 0x09, 0xd8, 0x4a, 0x59, 0x3d,
	0x4c, 0xf7, 0xe8, 0xc1, 0x8d, 0x94, 0x92, 0xc0, 0x25, 0xad, 0xc4, 0x20, 0xe4, 0xc1, 0xc5, 0xe9,
	0x93, 0x59, 0x0c, 0x36, 0xa6, 0x98, 0x02, 0x73, 0x0c, 0x18, 0x93, 0xd8, 0xc0, 0x41, 0x63, 0x0c,
	0x08, 0x00, 0x00, 0xff, 0xff, 0xaf, 0xa3, 0x33, 0x0e, 0x3e, 0x01, 0x00, 0x00,
}
